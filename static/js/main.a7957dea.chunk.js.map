{"version":3,"sources":["components/weathercard.js","components/weathercardscontainer.js","API/api.js","components/uppersection.js","reportWebVitals.js","index.js"],"names":["WeatherCard","className","this","props","city","country","degree","degreeGrade","src","degreeIcon","alt","description","Component","WeatherCardsContainer","fetchData","a","mainAPI","fetch","then","response","json","data","setState","loading","id","name","sys","weather","icon","main","temp","error","console","message","state","prevProps","Boolean","UpperSection","handleClick","target","preventDefault","document","getElementById","value","placeholder","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a7957dea.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport './styles/weathercard.css';\n\n\nclass WeatherCard extends Component {\n\n    render(){\n        return(\n            <article className=\"weather--card-container\">\n                <div className=\"d-flex flexd-row  align-items-center mb-4\">\n                <h4 className=\"m-0\">{this.props.city}</h4>\n                <span className=\"weather--card-badge ms-2 px-2\">{this.props.country}</span>\n                </div>\n                <div className=\"weather--degree-container d-flex align-items-start\">\n                <h2 className=\"weather--card-degree\">{this.props.degree}</h2> \n                <span className=\"mt-1 fs-1\">{this.props.degreeGrade}</span>\n                </div>\n                <figure>\n                    <img src={`http://openweathermap.org/img/wn/${this.props.degreeIcon}@4x.png`}alt={this.props.city} />\n                <figcaption>\n                <h3 className=\"text-capitalize mb-1\">{this.props.description}</h3>\n                </figcaption>\n                </figure>\n            </article>\n        )\n    }\n}\n\nexport default WeatherCard;","import React,{Component} from \"react\";\nimport WeatherCard from './weathercard.js';\nimport {API_KEY} from \"../API/api.js\";\n\n\n\nclass WeatherCardsContainer extends Component{\n    constructor(props){\n        super(props)\n        this.state= { \n            loading:true,\n            data: {\n                id: \"\",\n                city: \"\",\n                country: \"\",\n                degree: \"\",\n                degreeIcon:\"\",\n                degreeGrade: \"\",\n                description: \"\"\n\n            },\n            error:null\n        }\n    }\n    componentDidMount() {\n        this.fetchData(this.props.city)        \n    }\n    componentDidUpdate(prevProps){\n        if(prevProps.city !==this.props.city){\n            this.fetchData(this.props.city)\n        }\n    }\n \n    fetchData = async (city)=>{\n        const mainAPI = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${API_KEY}`;\n        try {\n            await fetch(mainAPI)\n            .then(response => response.json())\n            .then(data => {\n                 this.setState({\n                    loading: false,\n                    data:{\n                        id: data.id,\n                        city: data.name,\n                        country: data.sys.country,\n                        degreeIcon: data.weather[0].icon,\n                        degreeGrade:\"Â°C\",\n                        degree: data.main.temp,\n                        description: data.weather[0].description\n                    },\n                    error:null\n                })\n            }) \n        } \n        catch(err){\n            console.error(err.message)\n            this.setState({\n                loading: false, error:err.message\n            })\n        } \n           \n    }\nrender(){\n    if(this.state.loading===true){\n        return \"Loading..\"\n    }\n    if(this.state.error){\n        return(\"Error\")\n    }\n    if(Boolean(this.state.data.id)){\n        \n        return(\n            <WeatherCard \n            city={this.state.data.city}\n            country={this.state.data.country}\n            degree={this.state.data.degree}\n            degreeGrade={this.state.data.degreeGrade}\n            degreeIcon={this.state.data.degreeIcon}\n            description={this.state.data.description}\n            />\n            )\n        }\n    }\n}\n\n\nexport default WeatherCardsContainer;\n\n\n","\nconst API_KEY = \"c1526083db7d05e1bdbc581436170517\";\n\n\n\n// const fetchData = async function(city){\n    // &APPID=\n//     console.log(APIURL)\n//     try {\n//         await fetch(APIURL)\n//         .then(response => response.json())\n//         .then(data => data) //We should run the script to get the info\n//     } \n//     catch(err){\n//         console.error(err.message)\n//     } \n           \n// }\n\n\n\n\nexport {API_KEY};","import React,{Component} from \"react\";\nimport './styles/uppersection.css';\nimport WeatherCardsContainer from \"./weathercardscontainer.js\";\n\n\nclass UpperSection extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            city:false\n        }\n    }\n    handleClick = (target)=>{\n        target.preventDefault();\n        const city = document.getElementById(\"city--selected\");\n        this.setState({\n            city: city.value\n        })\n    }\n  \n    render() {\n        return(<>\n        <section className=\"container\">\n            <div className=\"d-flex align-items-center flex-column\">\n            <h1 className=\"main-title mt-4\">Simple Weather App</h1>\n            <p >Write down the city you like to know it current time</p>\n            <form className=\"d-flex flex-row \">\n                <input  className=\"main--info-button\" placeholder=\"Search for a city\" id=\"city--selected\" />\n                <button className=\"btn btn-danger ms-4\" onClick={this.handleClick}>Submit</button>\n            </form>\n        </div>\n        </section>\n        <section id=\"block--container\" className=\"container\"> \n            {this.state.city&&<WeatherCardsContainer city={this.state.city}/>}\n             \n        </section>\n        </>\n        )}\n\n}\n\nexport default UpperSection;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport UpperSection from '../src/components/uppersection.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UpperSection />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}